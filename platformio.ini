; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = emulator


[gui_base]
build_flags =
  ; -I src Required to find lv_conf.h & etl_profile.h
  -I src/gui
  -D LV_CONF_INCLUDE_SIMPLE
lib_deps =
  ;lvgl@~6.1.1
  lvgl=https://github.com/littlevgl/lvgl/archive/7afd70a00564bea0150f2f96648b3cba7983d091.zip
  Embedded Template Library@~18.3.2

;-------------------------------------------------------------------------------

[env:emulator]
platform = native
extra_scripts = support/sdl2_build_extra.py
extends = gui_base
build_flags =
  ${gui_base.build_flags}
  ; Use 32-bits build when possible, for correct memory stat display. You need
  ; `:i386` sdl2 libs installed. Comment this option for 64-bits build.
  !python -c 'import platform; print("-m32" if platform.system() in [ "Linux" ] else "")'
  -I hal/sdl2
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_MONITOR
  -D MONITOR_ZOOM=2
  -D USE_MOUSE
  -D USE_MOUSEWHEEL
src_build_flags =
  -Wall
  ;-Werror
  -Wdouble-promotion
  ;-Wconversion
  -Wextra
  -Wclobbered
  -Wdeprecated
  -Wempty-body
  -Wignored-qualifiers
  -Wimplicit-fallthrough=3
  -Wmissing-field-initializers
  -Wsign-compare
  -Wredundant-decls
  -Wtype-limits
  -Wuninitialized
  -Wshift-negative-value
  -Wunused-parameter
  -Wunused-but-set-parameter
lib_deps =
  ${gui_base.lib_deps}
  lv_drivers@^6.0.2
src_filter =
  +<./gui/*>
  +<../hal/sdl2>


[env:hardware_gui_stlink]
platform = ststm32@~6.0.0
extends = gui_base
board = our_genericSTM32F411CE
extra_scripts = post:support/stm32_build_extra.py
board_build.ldscript = hal/stm32f411ce/stm32cube/STM32F411CEUx_FLASH.ld
build_flags =
  ${gui_base.build_flags}
  -g
  ; Add recirsive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/stm32f411ce')]))"
src_filter =
  +<./gui/*>
  +<../hal/stm32f411ce/*>

[env:hardware_gui_usb]
platform = ststm32@~6.0.0
extends = env:hardware_gui_stlink
upload_protocol = dfu

;-------------------------------------------------------------------------------

[env:hardware_io_stlink]
platform = ststm32@~6.0.0
board = our_genericSTM32F042F6
debug_tool = stlink
extra_scripts = post:support/stm32_build_extra.py
board_build.ldscript = hal/stm32f042f6/stm32cube/STM32F042F6Px_FLASH.ld
build_flags =
  -g
  -I src/io
  ; Add recirsive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/stm32f042f6')]))"
src_filter =
  +<./io/*>
  +<../hal/stm32f042f6/*>

[env:hardware_io_usb]
platform = ststm32@~6.0.0
extends = env:hardware_io_stlink
upload_protocol = dfu

;-------------------------------------------------------------------------------

[env:hardware_gui_pd]
platform = ststm32@~6.0.0
extends = gui_base
board = our_genericSTM32G473RC
extra_scripts = post:support/stm32_build_extra.py
board_build.ldscript = hal/stm32g473rc_usb_pd/stm32cube/STM32G473RCTx_FLASH.ld
build_flags =
  ${gui_base.build_flags}
  -g
  ; Add recirsive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/stm32g473rc_usb_pd')]))"
  ; From Cube's Makefile
  -DUSE_FULL_LL_DRIVER
  -DUSBPD_PORT_COUNT=1
  -D_SNK
  -DUSE_HAL_DRIVER
  -DSTM32G473xx
  -DUSBPDCORE_LIB_PD3_CONFIG_1
  -Lhal/stm32g473rc_usb_pd/stm32cube/Middlewares/ST/STM32_USBPD_Library/Core/lib
  -l:USBPDCORE_PD3_CONFIG_1_CM4_wc32.a.a

src_filter =
  +<./gui/*>
  +<../hal/stm32g473rc_usb_pd/*>
  