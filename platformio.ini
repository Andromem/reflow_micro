; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = emulator

# Shared
[env]
build_flags =
  -D LV_CONF_INCLUDE_SIMPLE
  ; ETL options
  -D PROFILE_GCC_GENERIC
; Need to override `weak` handlers
lib_archive = false

[gui_base]
lib_deps =
  Embedded Template Library@~14.35.5
  ;lvgl@^6.0.2
  lvgl=https://github.com/littlevgl/lvgl/archive/3452e60ec1a86660f866608a577fa98c79ff8279.zip


[env:emulator]
platform = native
extends = gui_base
lib_deps =
  Embedded Template Library@~14.35.5
  ;lvgl@^6.0.2
  lvgl=https://github.com/littlevgl/lvgl/archive/3452e60ec1a86660f866608a577fa98c79ff8279.zip
  lv_drivers@^6.0.2
build_flags =
  ${env.build_flags}
  ; -I src Required to find lv_conf.h
  -I src/gui
  -I hal/sdl2
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_MONITOR
  -D MONITOR_ZOOM=2
  -D USE_MOUSE
  -D USE_MOUSEWHEEL
  ; Write memory usage to console
  ;-D MEM_USE_LOG=1
src_build_flags =
  -Wall
  ;-Werror
  -Wdouble-promotion
  ;-Wconversion
  -Wextra
  -Wclobbered
  -Wdeprecated
  -Wempty-body
  -Wignored-qualifiers
  -Wimplicit-fallthrough=3
  -Wmissing-field-initializers
  -Wsign-compare
  -Wredundant-decls
  -Wtype-limits
  -Wuninitialized
  -Wshift-negative-value
  -Wunused-parameter
  -Wunused-but-set-parameter
src_filter =
  +<./gui/*>
  +<../hal/sdl2>

[env:hardware_gui_stlink]
platform = ststm32@~5.7.0
extends = gui_base
board = our_genericSTM32F411CE
framework = stm32cube
build_flags =
  ${env.build_flags}
  -g
  -I src/gui
  -I hal/stm32f411ce
  -I hal/stm32f411ce/stm32cube/Inc
src_filter =
  +<./gui/*>
  +<../hal/stm32f411ce/*>
  -<../hal/stm32f411ce/stm32cube/Src/system_stm32f411xx.c>


[env:hardware_gui_usb]
platform = ststm32@~5.7.0
extends = env:hardware_gui_stlink
upload_protocol = dfu


[env:hardware_io_stlink]
platform = ststm32@~6.0.0
board = our_genericSTM32F042F6
debug_tool = stlink
extra_scripts = post:support/stm32_build_extra.py
build_flags =
  -g
  -I src/io
  ; Add recirsive dirs for hal headers search
  !python -c 'import os; print(" ".join([f"-I {i[0]}" for i in os.walk("hal/stm32f042f6")]))'
  -Wl,-Thal/stm32f042f6/stm32cube/STM32F042F6Px_FLASH.ld
  ;-Wl,-Map=$BUILD_DIR/${PROGNAME}.map,--cref
src_filter =
  +<./io/*>
  +<../hal/stm32f042f6/*>


[env:hardware_io_usb]
platform = ststm32@~6.0.0
extends = env:hardware_io_stlink
upload_protocol = dfu
